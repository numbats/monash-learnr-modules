---
title: Quarto Basics
subtitle: 'With Quarto, creating documents and reports becomes a breeze. In this chapter, you will learn how to set up Quarto, explore its key features, and start creating your own quarto documents with ease.'
title-block-banner: yes
engine: knitr
filters:
  - webr-teachr
webr:
  packages: 
css: style.css
format:
  html:
    toc: true
---

::: {.alert .alert-block .alert-warning}
# What is Quarto?

Quarto is a **open-source, technical publishing system** that allows you to create **interactive and reproducible** documents with ease.
:::

::: {.callout-note collapse="true"}
# A Brief History Lesson: Sweave to Quarto

Before delving into the basics of `Quarto`, it may be worthwhile to know the *brief* history of its predecessors.

## Sweave

`Sweave` is a tool that allows you to embed `R` code in LaTeX documents and was developed as one of the earlier tools for literate programming in `R`. `Sweave` integrates the statistical power of `R` with the typesetting capabilities of LaTex, laying the groundwork for more flexible and user-friendly tools like `R Markdown` and `Quarto`.

## R Markdown

R Markdown is a another file format for creating documents with R. It can be considered a modern approach to `sweave`. It allows a combination of text and R code in a single document to create reports, presentations, and websites. A primary difference between R Markdown and Sweave is that R Markdown is not tied to LaTeX, and can be used with other output formats like HTML, PDF, and Word.
:::

# Quarto Fundamentals

Quarto offers a seamless framework for integrating code, text, and visualisations into a single document, enabling the creation of interactive and reproducible reports. Written in `Markdown`, Quarto documents are straightforward to learn and use, yet powerful enough for complex document creation.

Built on the R Markdown ecosystem, Quarto allows you to embed R code chunks directly within your documents. This facilitates the creation of reports that are easy to share and update and facilitates in many existing `Rmd` files executable with minimal modifications.


::: callout-tip
## Quarto: Multi-Language and Multi-Engine

Quarto is not only limited to R code chunks, and you can also use **Python, Julia, and SQL code chunks** in your Quarto documents.

R Markdown on the other hand is tied to R, and has a dependency and requirement for R.
:::

Quarto also provides a range of [**built-in templates**](https://quarto.org/docs/websites/website-about.html) that you can use to create documents for different purposes, such as **academic papers, presentations, and websites.** These templates make it easy to get started with Quarto and create professional-looking documents with minimal effort.

## Setting Up Quarto

To get started with Quarto, you will need to **install the Quarto package** in R. You can do this by running the following command in the R console:

```{r eval=FALSE}
install.packages("quarto")
```

Once you have installed the Quarto package, you can create a new Quarto document by:

1.  Go to the File menu in RStudio

2.  Select New `File` \> `New File` \> `Quarto Document`

![](images/select_new.png){width="307" fig-align="center"}

3.  Choose the document type: `Document`, `Presentation`, or `Interactive`.

![](images/document_type.png){width="347" fig-align="center"}

A Quarto file is a plain text file with the extension `.qmd`.

Now that you've got your first `quarto` document up and ready, let's explore some *key components!* These include:

* A YAML header

* Chunks of R code

* Markdown text

## YAML

When you open up your first `quarto` document, you will notice a block of text up the top that looks something like this:

![](images/yaml.png){width="347" fig-align="center"}

This is the YAML header, which contains metadata about your document, including the title, author, and editor. It allows you to edit the document's title (currently “Untitled”), specifies that the output will be in `HTML format`, and indicates that the document will open in the `visual editor` by default.

::: callout-note
# Source vs Visual Editor

[RStudio v1.4](https://rstudio.com/products/rstudio/download/) or higher includes Visual Markdown editing. Instead of markdown syntax (e.g., **bolding** with double asterisks), you can format text, add images and insert tables using a toolbar or keyboard commands, similar to a word processor. View sections [28.3 and 28.4](https://r4ds.hadley.nz/quarto) for more detail.
:::

Beyond the basics, you can add some real handy components to the [YAML](https://quarto.org/docs/output-formats/html-basics.html)

|                                                      |                                                                                                                                                                                                                           |
|----------------|--------------------------------------------------------|
| author                                               | For assignments especially, its good to include your name and potentially student ID with this section in the YAML.                                                                                                       |
| subtitle                                             | For reports it may be nice to add a subtitle for further detail.                                                                                                                                                          |
| toc                                                  | A table of contents can be a useful tool in structuring your document. `toc-depth` specifies the level of headings to include (e.g. `toc-depth: 2` includes the top-level headings and second-level headings in the toc.) |
| [date](https://quarto.org/docs/reference/dates.html) | If you'd like to include the due date or publishing date of the report.                                                                                                                                                   |
|                                                      |                                                                                                                                                                                                                           |


::: {.callout-tip}
## YAML Structure
The structure of a YAML can be a little finicky, and errors may occur if it is not formatted correctly. If you  encountering errors or missing components - it may be worthwhile to cross-check. A useful starting point is the [Quarto documentation](https://quarto.org/docs/reference/formats/opml.html).
:::


## R Code Chunks

Code chunks refer to sections in the document where you can write and execute code. These chunks are enclosed by three backticks followed by the name of the language you are using (e.g., `r` for R code). Code chunks can be included in three ways:

1. Keyboard commands: `Ctrl + Alt + I` (Windows) or `Cmd + Option + I` (Mac)
2. Clicking the `Insert` button in the toolbar (top right):

![](images/insert.png){width="347" fig-align="center"}

3. Typing the code chunk manually:

![](images/code_chunk.png){width="300" fig-align="center"}






Write the code you want to include within the chunk and when you run it, the output will be displayed directly below the chunk!

::: {.callout-tip}
## Did you know
Code doesn't have to be in a chunk! You can also include `inline code` by using backticks (``) around code you would like to run in text.
:::


You can also add options to the code chunk to control how the code is executed and displayed. For example, you can specify the output format, the width and height of plots, and whether the code should be displayed in the output. 

![](images/chunk_options.png){width="347" fig-align="center"}

Look at the image of the code chunk above, you can see that the chunk has the following options:

`fig-cap`: This option allows you to add a caption to the figure.

`fig-width`: This option specifies the width of the figure.

`echo`: This option controls whether the code in the chunk is displayed in the output.

These are only a couple examples of options for chunk options, and there are many more available. You can find a full list of chunk options in [section 28.5.2](https://r4ds.hadley.nz/quarto) as well as further discussion in Communicating with Quarto. 


::: callout-tip
## Global Options
To set global options for all code chunks, add them in the YAML header under `execute:`. Indent the options you want to apply by pressing tab on the next line.
:::

# Markdown text

In a Quarto document, you can write text using Markdown syntax. Markdown is a lightweight markup language that allows you to format text using simple and intuitive syntax. You can use Markdown to create headings, lists, links, images, and more.

## Headings

Headings are created using the `#` symbol followed by the heading text. The number of `#` symbols indicates the level of the heading. For example, `#` creates a first-level heading, `##` creates a second-level heading, and so on.

## Text Formatting
Just like in any other word processors, you can also format your text. Here are some examples:

- **Bold**: `**bold**` or `__bold__`
- *Italic*: `*italic*` or `_italic_`
- ~~Strikethrough~~: `~~strikethrough~~`
- `Code`: `` `code` ``

## Lists

Lists can be created using `*`. You can also create nested lists by indenting the items with spaces.

::: callout-tip
## Checklist
You can also create checklists in Quarto! This can be done by using `- [ ]` for an empty box and `- [x]` for a checked box.
:::

## Test ur knowledge

** potentially a multiple choice question here about different common chunk options and what they do ??**

** interactive component to edit a basic yaml / include things in yaml -- pain point: warnings, messages = false, toc **


# Additional Resources

These are the more basic of the quarto markdown syntax. For more on how to communicate with quarto, refer to Communicating with Quarto. Additionally, the following resources may be helpful:

- [Get Started with Quarto](https://quarto.org/docs/get-started/)
- [Quarto Tutorial](https://quarto.org/docs/get-started/hello/rstudio.html)
- [R for Data Science - Quarto](https://quarto.org/docs/get-started/hello/rstudio.html)
- [Markdown Basics](https://quarto.org/docs/authoring/markdown-basics.html)



